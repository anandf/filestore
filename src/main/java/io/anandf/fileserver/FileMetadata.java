
package io.anandf.fileserver;

import com.fasterxml.jackson.annotation.JsonProperty;


import jakarta.persistence.Access;
import jakarta.persistence.AccessType;
import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQueries;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.Table;
import jakarta.persistence.Transient;
import jakarta.persistence.Enumerated;
import jakarta.persistence.EnumType;

/**
 * A File entity class. A File is represented by an
 * ID, a name, along with its checksum, size
 *
 * File, that has been uploaded by the user
 */
@Entity(name = "File")
@Table(name = "FILE")
@Access(AccessType.PROPERTY)
@NamedQueries({
        @NamedQuery(name = "getFiles",
                    query = "SELECT f FROM File f WHERE f.status=3"),
        @NamedQuery(name = "getFileByName",
        			query = "SELECT f FROM File f WHERE f.name = :name"),
        @NamedQuery(name = "getFileByChecksum",
                    query = "SELECT f FROM File f WHERE f.checksum = :checksum")
})
public class FileMetadata {

	/**
	 * Unique identifier for the file. Autogenerated during the DB insert operation
	 */
    private int id;

    /**
     * Name of the file being uploaded
     */
    private String name;

    /**
     * Checksum of the file used to validate the integrity of the file
     */
    private String checksum;

    /**
     * Size of the file
     */
    private long size;
    
    /**
     * Total number of partitions, in case the upload is done as multiple partitions.
     * If the upload is not done as a multipart upload, this value would be set to 0
     */
    private int partitionCount = 0;

    /**
     * Total number of words present in this given file
     */
    private int wordCount = 0;
    
    /**
     * Status of the file upload.
     */
	@Enumerated(EnumType.ORDINAL)
    private Status status = Status.NONE;
    

	/**
	 * Constructor for creating the file metadata
	 */
    public FileMetadata() {
    }

    @Id
    @Column(name = "ID", nullable = false, updatable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @Basic(optional = false)
    @Column(name = "NAME", nullable = false)
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Basic(optional = true)
    @Column(name = "SIZE", nullable = true)
    public long getSize() {
        return size;
    }

    public void setSize(long size) {
        this.size = size;
    }
    
    @Basic(optional = true)
    @Column(name = "CKSUM", nullable = true)
    public String getChecksum() {
        return checksum;
    }

    public void setChecksum(String checksum) {
        this.checksum = checksum;
    }
    
    
    @Basic(optional = true)
    @Column(name = "PARTITION_COUNT")
    public int getPartitionCount() {
		return partitionCount;
	}

	public void setPartitionCount(int partitionCount) {
		this.partitionCount = partitionCount;
	}

    @Basic(optional = true)
    @Column(name = "WORD_COUNT")
    public int getWordCount() {
		return wordCount;
	}

	public void setWordCount(int wordCount) {
		this.wordCount = wordCount;
	}

	@Basic(optional = true)
    @Column(name = "STATUS", nullable = true)
	public Status getStatus() {
		return status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}
}
